Story: Account Holder withdraws cash

As an Account Holder
I want to withdraw cash from an ATM
So that I can get money when the bank is closed

Scenario 1: Account has sufficient funds
Given the account balance is \$100
 And the card is valid
 And the machine contains enough money
When the Account Holder requests \$20
Then the ATM should dispense \$20
 And the account balance should be \$80
 And the card should be returned

Scenario 2: Account has insufficient funds
Given the account balance is \$10
 And the card is valid
 And the machine contains enough money
When the Account Holder requests \$20
Then the ATM should not dispense any money
 And the ATM should say there are insufficient funds
 And the account balance should be \$20
 And the card should be returned

Scenario 3: Card has been disabled
Given the card is disabled
When the Account Holder requests \$20
Then the ATM should retain the card
And the ATM should say the card has been retained

========================================================================

    <dependencies>
        <dependency>
            <groupId>com.github.slezier</groupId>
            <artifactId>SimpleFunctionalTest</artifactId>
            <version>1.4</version>
        </dependency>
    </dependencies>

========================================================================


   Scenario 1:accountHasSufficientFunds
//givenTheAccountBalanceIs100Dollars
//andTheCardIsValid
//andTheMachineContainsEnoughMoney
//whenTheAccountHolderRequests20Dollars
//thenTheAtmShouldDispense20Dollars
//andTheAccountBalanceShouldBe80Dollars
//andTheCardShouldBeReturned

   Scenario 2: accountHasInSufficientFunds
//pivenTheAccountBalanceIs \$10
//andTheCardIsValid
//andTheMachineContainsEnoughMoney
//whenTheAccountHolderRequests \$20
//thenTheAtmShouldNotDispenseAnyMoney
//andTheAtmShouldSayThereAreInSufficientFunds
//andTheAccountBalanceShouldBe \$20
//andTheCardShouldBeReturned

Scenario 3:cardHasBeenDisabled
//givenTheCardIsDisabled
//whenTheAccountHolderRequests \$20
//thenTheAtmShouldRetainTheCard
//andTheAtmShouldSayTheCardHasBeenRetained

===========================================================================


    @Text("And the account balance should be ${balance} $")
    private void andTheAccountBalanceShouldBe(int balance) {
        assertEquals(account.balance(), balance);
    }

    @Text("Then the atm should dispense  ${cash} $")
    private void thenTheAtmShouldDispense(int cash) {
        assertEquals(withdrawals, cash);
    }

    @Text("When the account holder requests ${amount} $")
    private void whenTheAccountHolderRequests(int amount) {
        atmSession = atm.authenticate(user);
        withdrawals = atmSession.withdraw(amount);
    }

    @Text("Given the account balance is ${initialAmount} $")
    private void givenTheAccountBalanceIs(int initialAmount) {
        bank = new Bank();
        user = new User();
        account = bank.createAccount(user, initialAmount);
    }

==============================================================================

    @Test
    public void accountHasSufficientFunds() {
        givenTheAccountBalanceIs(100);
        andTheCardIsValid();
        andTheMachineContainsEnoughMoney();

        whenTheAccountHolderRequests(20);

        thenTheAtmShouldDispense(20);
        andTheAccountBalanceShouldBe(80);
        andTheCardShouldBeReturned();
    }

    @Test
    public void accountHasInSufficientFunds(){
        givenTheAccountBalanceIs(10);
        andTheCardIsValid();
        andTheMachineContainsEnoughMoney();

        whenTheAccountHolderRequests(20);

        thenTheAtmShouldNotDispenseAnyMoney();
        andTheAtmShouldSayThereAreInSufficientFunds();
        andTheAccountBalanceShouldBe(10);
        andTheCardShouldBeReturned();
    }

=================================================================================